Two terms that sound the same, but mean different things are: dependency inversion and dependency injection.

First, Dependency inversion. Robert Martin defines the Dependency Inversion Principle as:

High-level modules should not depend on low-level modules. Both should depend on abstractions.
Abstractions should not depend upon details. Details should depend upon abstractions.
So, dependency inversion is about how classes are designed. The principle makes us think about what parts of our system are (should be) abstractions and what parts  contain low level details.

Dependency injection, on the other hand, is about how one object knows the dependencies of other objects, so that it can inject them, when needed. Dependency Injection is about how objects get their dependencies.

As you see, both are different, but somewhat related.

Ref : https://ocw.tudelft.nl/course-readings/4-4-4-dependency-injection-vs-dependency-inversion-principle/
